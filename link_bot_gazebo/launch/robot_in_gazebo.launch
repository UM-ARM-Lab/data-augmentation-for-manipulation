<launch>
    <env name="ROSCONSOLE_CONFIG_FILE"
         value="$(find link_bot_gazebo)/custom_rosconsole.conf"/>

    <arg name="world" default="empty.world"/>
    <arg name="verbose" default="false"/>
    <arg name="gui" default="true"/>
    <arg name="pause" default="true"/>
    <arg name="debug_gazebo" default="false"/>
    <arg name="debug_moveit" default="false"/>
    <arg name="use_victor" default="false"/>
    <arg name="use_val_with_husky" default="false"/>
    <arg name="use_val" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="robot_name" default="none"/>

    <param name="robot_name" value="$(arg robot_name)" type="string"/>

    <group ns="static_transform_publishers">
        <node pkg="tf2_ros" type="static_transform_publisher" name="rename_origin" required="true"
              args="0 0 0 0 0 0 world robot_root">
            <param name="use_sim_time" value="$(arg use_sim_time)"/>
        </node>
    </group>

    <!-- /////////////////////////////////////////////// -->
    <!-- Gazebo -->
    <group>
        <!-- because we use ros_control only for the joints of the arms, not the grippers,
             this is used to rename the joint_states topic it published -->
        <remap from="$(arg robot_name)/joint_states" to="$(arg robot_name)/arms_joint_states"/>
        <include file="$(find gazebo_ros)/launch/empty_world.launch">
            <arg name="world_name" value="$(find link_bot_gazebo)/worlds/$(arg world)"/>
            <arg name="verbose" default="$(arg verbose)"/>
            <arg name="paused" default="$(arg pause)"/>
            <arg name="use_sim_time" value="$(arg use_sim_time)"/>
            <arg name="gui" value="$(arg gui)"/>
        </include>
    </group>

    <!-- /////////////////////////////////////////////// -->
    <!-- Robot -->
    <group if="$(arg use_victor)">
        <!-- uploads robot description and setups up other parameters -->
        <!-- TODO: namespace tf and the robot_description -->
        <include file="$(find victor_moveit_config)/launch/planning_context.launch">
            <arg name="load_robot_description" value="true"/>
        </include>

        <!-- start the controllers -->
        <include file="$(find victor_control)/launch/victor_control_gazebo.launch">
            <arg name="robot_namespace" value="$(arg robot_name)"/>
        </include>

        <include ns="$(arg robot_name)" file="$(find victor_moveit_config)/launch/move_group.launch">
            <arg name="allow_trajectory_execution" value="true"/>
            <arg name="moveit_controller_manager" default="gazebo"/>
            <arg name="info" value="true"/>
            <arg name="debug" value="$(arg debug_moveit)"/>
        </include>

        <node pkg="victor_fake_hardware_interface"
              ns="victor"
              type="minimal_fake_control_mode_interface_node.py"
              name="minimal_fake_control_mode_interface_node"/>

        <!-- spawn the robot -->
        <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" output="screen"
              args="-urdf -model $(arg robot_name) -param robot_description"/>
    </group>
    <group if="$(arg use_val)">
        <!-- start the controllers -->
        <include file="$(find hdt_michigan_control)/launch/hdt_michigan_control_gazebo.launch">
            <arg name="robot_namespace" value="$(arg robot_name)"/>
        </include>

        <include ns="$(arg robot_name)" file="$(find hdt_michigan_moveit)/launch/move_group.launch">
            <arg name="allow_trajectory_execution" value="true"/>
            <arg name="moveit_controller_manager" default="gazebo"/>
            <arg name="info" value="true"/>
            <arg name="debug" value="$(arg debug_moveit)"/>
            <arg name="with_husky" value="true"/>
        </include>

        <!-- spawn the robot -->
        <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
              args="-urdf -model $(arg robot_name) -param $(arg robot_name)/robot_description -z 0.145"/>
    </group>
</launch>
